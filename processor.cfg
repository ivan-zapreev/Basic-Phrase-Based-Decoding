[Server Options]
    #The port to listen to; <unsigned integer>
    server_port=9005

    #The flag indicating whether a TLS server is to be started for WSS protocol
    is_tls_server=false
    
    #Defines the TLS mode, as defined by Mozilla:
    #    https://wiki.mozilla.org/Security/Server_Side_TLS)
    #The value can be one of:
    #    {old/int/mod/undef}
    #where 'undef' is only used for 'is_tls_server=false' and
    #the other modes are as follows:
    #    1. 'old' (Mozilla Old) - is for SSL v3
    #    2. 'int' (Mozilla Intermediate) - is for TLS v1,
    #    3. 'mod' (Mozilla Modern) - is for TLS v1.2
    #May be left empty or set to 'undef' for 'is_tls_server=false'
    tls_mode=undef

    #Defines the SSL certificate file name (*.crt or *.pem)
    #May be left empty for 'is_tls_server=false'
    tls_crt_file=<certificate file name>

    #Defines the SSL private key file name (*.key or *.pem)
    #generated from the certificate file. May be left empty
    #for 'is_tls_server=false'
    tls_key_file=<private key file name>

    #Defines the temporary DH (Diffie-Hellman) parameters file name (*.pem)
    #Example method of generating this file:
    #    openssl dhparam -out dh.pem 2048
    #The DH parameter size is to be chosen as follows:
    #    Mozilla Old suggests 1024 as the minimum size to use
    #    Mozilla Intermediate suggests 2048 as the minimum size to use
    #    Mozilla Modern has DH entirely disabled
    #May be left empty for 'is_tls_server=false' and 'tls_mode=mod'
    tls_tmp_dh_file=<temporary DH parameters file name>

    #The number of threads to handle the text processing requests
    num_threads=20

    #The folder for storing the input and output text files
    work_dir=./proc_text

    #Pre-processor script call template
    #The <WORK_DIR> the work directory where the files are stored
    #The <JOB_UID> the unique processor job identifier.
    #The <LANGUAGE> the source language name
    #The input source text file will have a name:
    #    <JOB_UID>.pre.in.txt
    #The output source text file shall get a name:
    #    <JOB_UID>.pre.out.txt
    #Note that: After the server pre-processing job is finished the
    #           input and output source text files are deleted. 
    #           If need to be kept for e.g. post-processing the pre-
    #           processing script must do a back-up itself.
    pre_call_templ=../script/text/pre_process.sh --work-dir=<WORK_DIR> --job-uid=<JOB_UID> --lang=<LANGUAGE>
    
    #Post-processor script call template
    #The <WORK_DIR> the work directory where the files are stored
    #The <JOB_UID> the unique processor job identifier.
    #The <LANGUAGE> the target language name
    #The input target text file has a name:
    #    <JOB_UID>.post.in.txt
    #The output target text file shall get a name:
    #    <JOB_UID>.post.out.txt
    #The presence of the corresponding pre-processor job files:
    #    <JOB_UID>.pre.in.txt
    #    <JOB_UID>.pre.out.txt
    #is not default and is to be taken care of by a concrete
    #pre-processor script implementation.
    post_call_templ=../script/text/post_process.sh --work-dir=<WORK_DIR> --job-uid=<JOB_UID> --lang=<LANGUAGE>
