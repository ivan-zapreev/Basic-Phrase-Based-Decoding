[Server Options]
    #The <port> the server will be listening to;
    server_port=9005

    #The flag indicating whether a TLS server is to be started for WSS protocol;
    is_tls_server=true
    
    #Defines the TLS mode, as defined by Mozilla:
    #    https://wiki.mozilla.org/Security/Server_Side_TLS)
    #The value can be one of:
    #    {old/int/mod/undef}
    #where 'undef' is only used for 'is_tls_server=false' and
    #the other modes are as follows:
    #    1. 'old' (Mozilla Old) - is for SSL v3 or higher
    #    2. 'int' (Mozilla Intermediate) - is for TLS v1 or higher
    #    3. 'mod' (Mozilla Modern) - is for TLS v2 or higher
    #May be left empty or set to 'undef' for 'is_tls_server=false'
    tls_mode=mod

    #Defines the SSL certificate file name (*.crt or *.pem);
    #May be left empty for when 'is_tls_server=false'
    tls_crt_file=./certificates/client2048.crt

    #Defines the SSL private key file name (*.key or *.pem);
    #generated from the certificate file. May be left empty
    #for when 'is_tls_server=false'
    tls_key_file=./certificates/client2048.key

    #Defines the temporary DH (Diffie-Hellman) parameters file name (*.pem);
    #Example method of generating this file:
    #    openssl dhparam -out dh.pem 2048
    #The DH parameter size is to be chosen as follows:
    #    Mozilla Old - suggests 1024 as the minimum size to use, using
    #                  smaller size will cause TLS handshake failure!
    #    Mozilla Intermediate - suggests 2048 as the minimum size to use
    #    Mozilla Modern - suggests not using DH at all but we still allow
    #May be left empty for 'is_tls_server=false'
    tls_tmp_dh_file=./certificates/dh2048.pem

    #Allows to define the ciphers (https://en.wikipedia.org/wiki/Cipher_suite)
    #to be used with TLS handshake; If not defined or empty then default system
    #ciphers will be used. USING WRONG CIPHERS MAY CAUSE TLS HANDSHAKE FAILURE!
    #Note that, Mozilla defines suggested ciphers per TLS mode here:
    #    https://wiki.mozilla.org/Security/Server_Side_TLS)
    #The OpenSSL function used to set ciphers documentation is here:
    #    https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_cipher_list.html
    #More information and ciphers and choosing them can be found here:
    #    https://technology.amis.nl/2017/07/04/ssltls-choose-cipher-suite/
    #This parameter is only used for when 'is_tls_server=true'
    tls_ciphers=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    
    #The number of threads to handle the translation requests;
    num_req_threads=10
    
    #The number of threads to handle the translation responses;
    num_resp_threads=10

    #Stores the list of <translator name> elements representing the translators
    #to be used; Each name in the list is a name of the subsequent section in
    #this configuration file, storing the corresponding translator's client
    #configuration parameters.
    translation_server_names=SERVER_9002_NO_TLS|SERVER_9001_TLS

    #Re-connection time-out in milliseconds; Defines the period in which the
    #disconnected translation servers will be tried to reconnect again.
    reconnect_time_out=5000;

[SERVER_9002_NO_TLS]
    #The URI of the translation or load balancer server; Here <protocol> 
    #is 'ws' or 'wss', the former is for TLS enabled communications.
    server_uri=ws://localhost:9002

    #The load factor of the translation server, which indicates the server efficiency.
    #The value must be a positive integer and all the server load weights are
    #normalized to get the % of work that is to be dedicated to this or that server.
    load_weight=1

[SERVER_9001_TLS]
    #The URI of the translation or load balancer server; Here <protocol> 
    #is 'ws' or 'wss', the former is for TLS enabled communications.
    server_uri=wss://localhost:9001

    #Defines the server TLS mode; The 'undef' is only used for 'ws' protocol.
    #Is optional and may be skipped for when <protocol> is set to to 'ws'.
    #Must be >= that that of the server's TLS mode, the order is natural.
    tls_mode=int

    #Defines the client TLS ciphers; Is an optional parameter  and may be 
    #left empty for system defaults. Is optional and may be skipped for when
    #<protocol> is set to 'ws'. Must agree  with the ciphers used by the server,
    #otherwise a 'TLS handshake failure' is possible.
    tls_ciphers=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

    #The load factor of the translation server, which indicates the server efficiency.
    #The value must be a positive integer and all the server load weights are
    #normalized to get the % of work that is to be dedicated to this or that server.
    load_weight=2
